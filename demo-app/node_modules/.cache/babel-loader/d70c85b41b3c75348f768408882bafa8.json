{"remainingRequest":"/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/babel-loader/lib/index.js!/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Voorhoede/www/deltares/delta-vue-components/component-library/src/components/LayerListControls/LayerListControls.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Voorhoede/www/deltares/delta-vue-components/component-library/src/components/LayerListControls/LayerListControls.vue","mtime":1604391627000},{"path":"/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvVm9sdW1lcy9Wb29yaG9lZGUvd3d3L2RlbHRhcmVzL2RlbHRhLXZ1ZS1jb21wb25lbnRzL2RlbW8tYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IHdhdGNoLCBuZXh0VGljaywgcmVmLCB0b1JlZnMsIGNvbXB1dGVkIH0gZnJvbSAnQHZ1ZS9jb21wb3NpdGlvbi1hcGknOwppbXBvcnQgYWRkSW5kZXggZnJvbSAnLi9hZGQtaW5kZXgnOwppbXBvcnQgZmluZEluVHJlZSBmcm9tICcuL2ZpbmQtaW4tdHJlZSc7CmltcG9ydCBhZGRQYXJlbnRJZFRvTGF5ZXJzIGZyb20gJy4vYWRkLXBhcmVudC1pZC10by1sYXllcnMnOwppbXBvcnQgdXNlTGVnZW5kIGZyb20gJy4vdXNlTGVnZW5kJzsKaW1wb3J0IHVzZVNlbGVjdGVkIGZyb20gJy4vdXNlU2VsZWN0ZWQnOwppbXBvcnQgdXNlU29ydGFibGUgZnJvbSAnLi91c2VTb3J0YWJsZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgbGF5ZXJzOiBBcnJheQogIH0sCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzLCBjb250ZXh0KSB7CiAgICB2YXIgb3Blbkl0ZW1zID0gcmVmKFtdKTsKCiAgICB2YXIgX3RvUmVmcyA9IHRvUmVmcyhwcm9wcyksCiAgICAgICAgbGF5ZXJzID0gX3RvUmVmcy5sYXllcnM7CgogICAgdmFyIGxheWVyc1dpdGhQYXJlbnRzID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gYWRkUGFyZW50SWRUb0xheWVycyhsYXllcnMudmFsdWUpOwogICAgfSk7CiAgICB2YXIgbGF5ZXJzQXJlUHJvdmlkZWQgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBsYXllcnNXaXRoUGFyZW50cy52YWx1ZS5sZW5ndGggPiAwOwogICAgfSk7CgogICAgdmFyIF91c2VTZWxlY3RlZCA9IHVzZVNlbGVjdGVkKCksCiAgICAgICAgc2V0U2VsZWN0ZWRJZHMgPSBfdXNlU2VsZWN0ZWQuc2V0U2VsZWN0ZWRJZHMsCiAgICAgICAgc2VsZWN0ZWRJZHMgPSBfdXNlU2VsZWN0ZWQuc2VsZWN0ZWRJZHM7CgogICAgdmFyIF91c2VMZWdlbmQgPSB1c2VMZWdlbmQoc2VsZWN0ZWRJZHMpLAogICAgICAgIGFjdGl2ZUxlZ2VuZCA9IF91c2VMZWdlbmQuYWN0aXZlTGVnZW5kLAogICAgICAgIHNldEFjdGl2ZUxlZ2VuZCA9IF91c2VMZWdlbmQuc2V0QWN0aXZlTGVnZW5kOwoKICAgIHZhciBfdXNlU29ydGFibGUgPSB1c2VTb3J0YWJsZShsYXllcnMsIGNvbnRleHQucm9vdC4kZWwsIG9wZW5JdGVtcyksCiAgICAgICAgb25Tb3J0aW5nQ2hhbmdlID0gX3VzZVNvcnRhYmxlLm9uU29ydGluZ0NoYW5nZTsKCiAgICB2YXIgc29ydGVkU2VsZWN0ZWRMYXllcnMgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciB3aXRoSW5kZXggPSBhZGRJbmRleChsYXllcnMudmFsdWUpOwogICAgICByZXR1cm4gc2VsZWN0ZWRJZHMudmFsdWUubWFwKGZ1bmN0aW9uIChpZCkgewogICAgICAgIHJldHVybiBmaW5kSW5UcmVlKHdpdGhJbmRleCwgJ2lkJywgaWQpOwogICAgICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgcmV0dXJuIGIuaW5kZXggLSBhLmluZGV4OwogICAgICB9KS5tYXAoZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICB2YXIgaW5kZXggPSBfcmVmLmluZGV4LAogICAgICAgICAgICBsYXllciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbImluZGV4Il0pOwoKICAgICAgICByZXR1cm4gbGF5ZXI7CiAgICAgIH0pOwogICAgfSk7CiAgICBvblNvcnRpbmdDaGFuZ2UoZnVuY3Rpb24gKHNvcnRlZExheWVycykgewogICAgICByZXR1cm4gY29udGV4dC5lbWl0KCdsYXllci1zb3J0aW5nLWNoYW5nZScsIHNvcnRlZExheWVycyk7CiAgICB9KTsKICAgIHdhdGNoKGFjdGl2ZUxlZ2VuZCwgZnVuY3Rpb24gKG5ld0FjdGl2ZUxlZ2VuZCkgewogICAgICByZXR1cm4gY29udGV4dC5lbWl0KCdsZWdlbmQtY2hhbmdlJywgbmV3QWN0aXZlTGVnZW5kKTsKICAgIH0pOwogICAgd2F0Y2goc29ydGVkU2VsZWN0ZWRMYXllcnMsIGZ1bmN0aW9uIChzb3J0ZWRTZWxlY3RlZCkgewogICAgICByZXR1cm4gY29udGV4dC5lbWl0KCdhY3RpdmUtbGF5ZXJzLWNoYW5nZScsIHNvcnRlZFNlbGVjdGVkKTsKICAgIH0pOwogICAgcmV0dXJuIHsKICAgICAgb3Blbkl0ZW1zOiBvcGVuSXRlbXMsCiAgICAgIGxheWVyc0FyZVByb3ZpZGVkOiBsYXllcnNBcmVQcm92aWRlZCwKICAgICAgYWN0aXZlTGVnZW5kOiBhY3RpdmVMZWdlbmQsCiAgICAgIHNldEFjdGl2ZUxlZ2VuZDogc2V0QWN0aXZlTGVnZW5kLAogICAgICBzZXRTZWxlY3RlZElkczogc2V0U2VsZWN0ZWRJZHMsCiAgICAgIGxheWVyc1dpdGhQYXJlbnRzOiBsYXllcnNXaXRoUGFyZW50cwogICAgfTsKICB9Cn07"},{"version":3,"sources":["LayerListControls.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,KAAA,EAAA,QAAA,EAAA,GAAA,EAAA,MAAA,EAAA,QAAA,QAAA,sBAAA;AACA,OAAA,QAAA,MAAA,aAAA;AACA,OAAA,UAAA,MAAA,gBAAA;AACA,OAAA,mBAAA,MAAA,2BAAA;AACA,OAAA,SAAA,MAAA,aAAA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,WAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GADA;AAEA,EAAA,KAFA,iBAEA,KAFA,EAEA,OAFA,EAEA;AACA,QAAA,SAAA,GAAA,GAAA,CAAA,EAAA,CAAA;;AADA,kBAEA,MAAA,CAAA,KAAA,CAFA;AAAA,QAEA,MAFA,WAEA,MAFA;;AAGA,QAAA,iBAAA,GAAA,QAAA,CAAA;AAAA,aAAA,mBAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAAA,KAAA,CAAA;AACA,QAAA,iBAAA,GAAA,QAAA,CAAA;AAAA,aAAA,iBAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA;AAAA,KAAA,CAAA;;AAJA,uBAKA,WAAA,EALA;AAAA,QAKA,cALA,gBAKA,cALA;AAAA,QAKA,WALA,gBAKA,WALA;;AAAA,qBAMA,SAAA,CAAA,WAAA,CANA;AAAA,QAMA,YANA,cAMA,YANA;AAAA,QAMA,eANA,cAMA,eANA;;AAAA,uBAOA,WAAA,CAAA,MAAA,EAAA,OAAA,CAAA,IAAA,CAAA,GAAA,EAAA,SAAA,CAPA;AAAA,QAOA,eAPA,gBAOA,eAPA;;AASA,QAAA,oBAAA,GAAA,QAAA,CAAA,YAAA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,aAAA,WAAA,CAAA,KAAA,CACA,GADA,CACA,UAAA,EAAA;AAAA,eAAA,UAAA,CAAA,SAAA,EAAA,IAAA,EAAA,EAAA,CAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,KAAA;AAAA,OAFA,EAGA,GAHA,CAGA;AAAA,YAAA,KAAA,QAAA,KAAA;AAAA,YAAA,KAAA;;AAAA,eAAA,KAAA;AAAA,OAHA,CAAA;AAIA,KANA,CAAA;AAQA,IAAA,eAAA,CAAA,UAAA,YAAA;AAAA,aAAA,OAAA,CAAA,IAAA,CAAA,sBAAA,EAAA,YAAA,CAAA;AAAA,KAAA,CAAA;AACA,IAAA,KAAA,CAAA,YAAA,EAAA,UAAA,eAAA;AAAA,aAAA,OAAA,CAAA,IAAA,CAAA,eAAA,EAAA,eAAA,CAAA;AAAA,KAAA,CAAA;AACA,IAAA,KAAA,CAAA,oBAAA,EAAA,UAAA,cAAA;AAAA,aAAA,OAAA,CAAA,IAAA,CAAA,sBAAA,EAAA,cAAA,CAAA;AAAA,KAAA,CAAA;AAEA,WAAA;AAAA,MAAA,SAAA,EAAA,SAAA;AAAA,MAAA,iBAAA,EAAA,iBAAA;AAAA,MAAA,YAAA,EAAA,YAAA;AAAA,MAAA,eAAA,EAAA,eAAA;AAAA,MAAA,cAAA,EAAA,cAAA;AAAA,MAAA,iBAAA,EAAA;AAAA,KAAA;AACA;AAxBA,CAAA","sourcesContent":["<template>\n  <div v-if=\"layersAreProvided\">\n    <v-treeview\n      :open.sync=\"openItems\"\n      selectable\n      :items=\"layersWithParents\"\n      @input=\"setSelectedIds\"\n      :open-all=\"true\"\n    >\n      <template v-slot:label=\"{ item, selected }\">\n        <div class=\"d-flex align-center\">\n          <span\n            class=\"sortable-handle\"\n            :data-id=\"item.id\"\n            :data-parent-ids=\"item.parentIds.toString()\"\n          >{{ item.name }}</span>\n          <v-btn\n            v-if=\"item.layer && selected\"\n            icon\n            class=\"ml-auto\"\n            @click=\"setActiveLegend(item.id)\"\n          >\n            <v-icon>\n              mdi-card-bulleted{{\n                item.id === activeLegend ? '' : '-off'\n              }}-outline\n            </v-icon>\n          </v-btn>\n        </div>\n      </template>\n    </v-treeview>\n  </div>\n</template>\n\n<script>\nimport { watch, nextTick, ref, toRefs, computed } from '@vue/composition-api'\nimport addIndex from './add-index'\nimport findInTree from './find-in-tree'\nimport addParentIdToLayers from './add-parent-id-to-layers'\nimport useLegend from './useLegend'\nimport useSelected from './useSelected'\nimport useSortable from './useSortable'\n\nexport default {\n  props: { layers: Array },\n  setup(props, context) {\n    const openItems = ref([])\n    const { layers } = toRefs(props)\n    const layersWithParents = computed(() => addParentIdToLayers(layers.value))\n    const layersAreProvided = computed(() => layersWithParents.value.length > 0)\n    const { setSelectedIds, selectedIds } = useSelected()\n    const { activeLegend, setActiveLegend } = useLegend(selectedIds)\n    const { onSortingChange } = useSortable(layers, context.root.$el, openItems)\n\n    const sortedSelectedLayers = computed(() => {\n      const withIndex = addIndex(layers.value)\n      return selectedIds.value\n        .map(id => findInTree(withIndex, 'id', id))\n        .sort((a, b) => b.index - a.index)\n        .map(({index, ...layer}) => layer)\n    })\n\n    onSortingChange(sortedLayers => context.emit('layer-sorting-change', sortedLayers))\n    watch(activeLegend, newActiveLegend => context.emit('legend-change', newActiveLegend))\n    watch(sortedSelectedLayers, sortedSelected => context.emit('active-layers-change', sortedSelected))\n\n    return { openItems, layersAreProvided, activeLegend, setActiveLegend, setSelectedIds, layersWithParents }\n  },\n}\n</script>\n\n<style>\n.sortable-handle {\n  cursor: grab;\n}\n</style>"],"sourceRoot":"../component-library/src/components/LayerListControls"}]}