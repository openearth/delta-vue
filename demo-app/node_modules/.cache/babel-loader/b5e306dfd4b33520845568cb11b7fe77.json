{"remainingRequest":"/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/babel-loader/lib/index.js!/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/eslint-loader/index.js??ref--13-0!/Volumes/Voorhoede/www/deltares/delta-vue-components/component-library/src/components/LayerListControls/add-index.js","dependencies":[{"path":"/Volumes/Voorhoede/www/deltares/delta-vue-components/component-library/src/components/LayerListControls/add-index.js","mtime":1604400813000},{"path":"/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Voorhoede/www/deltares/delta-vue-components/demo-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1ZvbHVtZXMvVm9vcmhvZWRlL3d3dy9kZWx0YXJlcy9kZWx0YS12dWUtY29tcG9uZW50cy9kZW1vLWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CgovKiogQHR5cGVkZWYge2ltcG9ydCgnLi9fdHlwZXMnKS5MYXllcn0gKi8KCi8qKiBAdHlwZWRlZiB7aW1wb3J0KCcuL190eXBlcycpLkxheWVyR3JvdXB9ICovCgovKiogQHR5cGVkZWYge0xheWVyICYgeyBpbmRleDogTnVtYmVyIH19IExheWVyV2l0aEluZGV4ICovCgovKiogQHR5cGVkZWYge0xheWVyR3JvdXAgJiB7IGNoaWxkcmVuOiBMYXllckdyb3VwW10gfCBMYXllcldpdGhJbmRleFtdIH19IExheWVyR3JvdXBXaXRoSW5kZXggKi8KCi8qKiBAdHlwZWRlZiB7eyB2YWx1ZTogTnVtYmVyIH19IExheWVySW5kZXggKi8KCi8qKgogKiBAdHlwZWRlZiBJbmRleAogKiBAcHJvcGVydHkgeygpID0+IE51bWJlcn0gZ2V0VmFsdWUKICogQHByb3BlcnR5IHsoKSA9PiBOdW1iZXJ9IGluY3JlbWVudAogKi8KCi8qKgogKiBUaGUgY3JlYXRlSW5kZXggZnVuY3Rpb24gY3JlYXRlcyBhIGNsb3N1cmUgYXJvdW5kIHRoZSBjdXJyZW50SW5kZXggYW5kCiAqIHByb3ZpZGVzIG1ldGhvZHMgdG8gaW5jcmVhc2UgYW5kIHJlYWQgdGhlIHZhbHVlIG9mIHRoZSBjdXJyZW50SW5kZXggdmFsdWUuCiAqIFdlIGRvIHRoaXMgYmVjYXVzZSB3ZSBuZWVkIHRvIGtlZXAgYSByZWZlcmVuY2Ugb2YgdGhlIGN1cnJlbnQgaW5kZXggaW4gdGhlCiAqIHJlY3Vyc2l2ZSBmdW5jdGlvbi4KICogCiAqIEBwYXJhbSB7TnVtYmVyfSB2YWx1ZSBpbml0aWFsIHZhbHVlCiAqIEByZXR1cm5zIHtJbmRleH0KICovCmZ1bmN0aW9uIGNyZWF0ZUluZGV4KHZhbHVlKSB7CiAgdmFyIGN1cnJlbnRJbmRleCA9IHZhbHVlOwogIHJldHVybiB7CiAgICBnZXRWYWx1ZTogZnVuY3Rpb24gZ2V0VmFsdWUoKSB7CiAgICAgIHJldHVybiBjdXJyZW50SW5kZXg7CiAgICB9LAogICAgaW5jcmVtZW50OiBmdW5jdGlvbiBpbmNyZW1lbnQoKSB7CiAgICAgIHJldHVybiBjdXJyZW50SW5kZXgrKzsKICAgIH0KICB9Owp9Ci8qKgogKiBbUmVjdXJzaXZlXQogKiBSZXZlcnNlcyBhbGwgaXRlbXMgaW4gdGhlIGFycmF5IGFzIHdlbGwgYXMgdGhlIGFycmF5IG9mIHRoZSBgY2hpbGRyZW5gIHByb3BlcnR5CiAqIAogKiBAcGFyYW0ge0xheWVyR3JvdXBbXSB8IExheWVyR3JvdXBXaXRoSW5kZXhbXX0gbGlzdCAKICogQHJldHVybnMge0xheWVyR3JvdXBbXSB8IExheWVyR3JvdXBXaXRoSW5kZXhbXX0KICovCgoKZnVuY3Rpb24gcmV2ZXJzZShsaXN0KSB7CiAgcmV0dXJuIGxpc3QucmV2ZXJzZSgpLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgcmV0dXJuIGl0ZW0uY2hpbGRyZW4gPyBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGl0ZW0pLCB7fSwgewogICAgICBjaGlsZHJlbjogcmV2ZXJzZShpdGVtLmNoaWxkcmVuKQogICAgfSkgOiBpdGVtOwogIH0pOwp9Ci8qKgogKiBbUmVjdXJzaXZlXQogKiBBZGRzIGluZGV4ZXMgdG8gYWxsIGxheWVycyBpbiBhIExheWVyR3JvdXAKICogCiAqIEBwYXJhbSB7TGF5ZXJHcm91cFtdfSBsaXN0CiAqIEBwYXJhbSB7SW5kZXh9IGluZGV4CiAqIEByZXR1cm5zIHtMYXllckdyb3VwV2l0aEluZGV4W119CiAqLwoKCmZ1bmN0aW9uIGFkZEluZGV4VG9MYXllcnMobGlzdCwgaW5kZXgpIHsKICByZXR1cm4gbGlzdC5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgIGlmIChpdGVtLnVybCkgewogICAgICBpbmRleC5pbmNyZW1lbnQoKTsKICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgaXRlbSksIHt9LCB7CiAgICAgICAgaW5kZXg6IGluZGV4LmdldFZhbHVlKCkKICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBpdGVtKSwge30sIHsKICAgICAgICBjaGlsZHJlbjogYWRkSW5kZXhUb0xheWVycyhpdGVtLmNoaWxkcmVuLCBpbmRleCkKICAgICAgfSk7CiAgICB9CiAgfSk7Cn0KLyoqCiAqIAogKiBAcGFyYW0ge0xheWVyR3JvdXBbXX0gc291cmNlIAogKiBAcmV0dXJucyB7TGF5ZXJHcm91cFdpdGhJbmRleFtdfQogKi8KCgpmdW5jdGlvbiBhZGRJbmRleChzb3VyY2UpIHsKICAvKiogQHR5cGUge0luZGV4fSAqLwogIHZhciBpbmRleCA9IGNyZWF0ZUluZGV4KC0xKTsKICAvKiogQHR5cGUge0xheWVyR3JvdXBbXX0gKi8KCiAgdmFyIF9zb3VyY2UgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHNvdXJjZSkpOwoKICB2YXIgcmV2ZXJzZWQgPSByZXZlcnNlKF9zb3VyY2UpOwogIHZhciB3aXRoSW5kZXggPSBhZGRJbmRleFRvTGF5ZXJzKHJldmVyc2VkLCBpbmRleCk7CiAgdmFyIG5vcm1hbGlzZWQgPSByZXZlcnNlKHdpdGhJbmRleCk7CiAgcmV0dXJuIG5vcm1hbGlzZWQ7Cn0KCmV4cG9ydCBkZWZhdWx0IGFkZEluZGV4Ow=="},{"version":3,"sources":["/Volumes/Voorhoede/www/deltares/delta-vue-components/component-library/src/components/LayerListControls/add-index.js"],"names":["createIndex","value","currentIndex","getValue","increment","reverse","list","map","item","children","addIndexToLayers","index","url","addIndex","source","_source","JSON","parse","stringify","reversed","withIndex","normalised"],"mappings":";;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAMC;;;;;;;;;AASD,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,YAAY,GAAGD,KAAnB;AACA,SAAO;AACLE,IAAAA,QAAQ,EAAE;AAAA,aAAMD,YAAN;AAAA,KADL;AAELE,IAAAA,SAAS,EAAE;AAAA,aAAMF,YAAY,EAAlB;AAAA;AAFN,GAAP;AAID;AAED;;;;;;;;;AAOA,SAASG,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,SAAOA,IAAI,CACRD,OADI,GAEJE,GAFI,CAEA,UAAAC,IAAI;AAAA,WACPA,IAAI,CAACC,QAAL,mCACSD,IADT;AACeC,MAAAA,QAAQ,EAAEJ,OAAO,CAACG,IAAI,CAACC,QAAN;AADhC,SAEID,IAHG;AAAA,GAFJ,CAAP;AAOD;AAED;;;;;;;;;;AAQA,SAASE,gBAAT,CAA0BJ,IAA1B,EAAgCK,KAAhC,EAAuC;AACrC,SAAOL,IAAI,CACRC,GADI,CACA,UAAAC,IAAI,EAAI;AACX,QAAIA,IAAI,CAACI,GAAT,EAAc;AACZD,MAAAA,KAAK,CAACP,SAAN;AACA,6CACKI,IADL;AAEEG,QAAAA,KAAK,EAAEA,KAAK,CAACR,QAAN;AAFT;AAID,KAND,MAMO;AACL,6CACKK,IADL;AAEEC,QAAAA,QAAQ,EAAEC,gBAAgB,CAACF,IAAI,CAACC,QAAN,EAAgBE,KAAhB;AAF5B;AAID;AACF,GAdI,CAAP;AAeD;AAED;;;;;;;AAKA,SAASE,QAAT,CAAkBC,MAAlB,EAA0B;AACxB;AACA,MAAIH,KAAK,GAAGX,WAAW,CAAC,CAAC,CAAF,CAAvB;AAEA;;AACA,MAAMe,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,MAAf,CAAX,CAAhB;;AACA,MAAMK,QAAQ,GAAGd,OAAO,CAACU,OAAD,CAAxB;AACA,MAAMK,SAAS,GAAGV,gBAAgB,CAACS,QAAD,EAAWR,KAAX,CAAlC;AACA,MAAMU,UAAU,GAAGhB,OAAO,CAACe,SAAD,CAA1B;AACA,SAAOC,UAAP;AACD;;AAED,eAAeR,QAAf","sourcesContent":["/** @typedef {import('./_types').Layer} */\n/** @typedef {import('./_types').LayerGroup} */\n/** @typedef {Layer & { index: Number }} LayerWithIndex */\n/** @typedef {LayerGroup & { children: LayerGroup[] | LayerWithIndex[] }} LayerGroupWithIndex */\n/** @typedef {{ value: Number }} LayerIndex */\n/**\n * @typedef Index\n * @property {() => Number} getValue\n * @property {() => Number} increment\n */\n\n /**\n  * The createIndex function creates a closure around the currentIndex and\n  * provides methods to increase and read the value of the currentIndex value.\n  * We do this because we need to keep a reference of the current index in the\n  * recursive function.\n  * \n  * @param {Number} value initial value\n  * @returns {Index}\n  */\nfunction createIndex(value) {\n  let currentIndex = value\n  return {\n    getValue: () => currentIndex,\n    increment: () => currentIndex++\n  }\n}\n\n/**\n * [Recursive]\n * Reverses all items in the array as well as the array of the `children` property\n * \n * @param {LayerGroup[] | LayerGroupWithIndex[]} list \n * @returns {LayerGroup[] | LayerGroupWithIndex[]}\n */\nfunction reverse(list) {\n  return list\n    .reverse()\n    .map(item => \n      item.children\n        ? { ...item, children: reverse(item.children) }\n        : item\n    )\n}\n\n/**\n * [Recursive]\n * Adds indexes to all layers in a LayerGroup\n * \n * @param {LayerGroup[]} list\n * @param {Index} index\n * @returns {LayerGroupWithIndex[]}\n */\nfunction addIndexToLayers(list, index) {\n  return list\n    .map(item => {\n      if (item.url) {\n        index.increment()\n        return {\n          ...item,\n          index: index.getValue()\n        }\n      } else {\n        return {\n          ...item,\n          children: addIndexToLayers(item.children, index)\n        }\n      }\n    })\n}\n\n/**\n * \n * @param {LayerGroup[]} source \n * @returns {LayerGroupWithIndex[]}\n */\nfunction addIndex(source) {\n  /** @type {Index} */\n  let index = createIndex(-1)\n\n  /** @type {LayerGroup[]} */\n  const _source = JSON.parse(JSON.stringify(source))\n  const reversed = reverse(_source)\n  const withIndex = addIndexToLayers(reversed, index)\n  const normalised = reverse(withIndex)\n  return normalised\n}\n\nexport default addIndex"]}]}